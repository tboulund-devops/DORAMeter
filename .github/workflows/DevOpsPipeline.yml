name: DevOpsPipeline

on:
  push:
    branches:
      - main
  workflow_dispatch: 
    
jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Run integration tests
        run: docker compose run --rm integration-test
        
#      - name: Execute static code analysis
#        uses: sonarsource/sonarqube-quality-gate-action@master # Fails if quality gates are not met - if no quality gates wanted use sonarsource/sonarqube-scan-action@v3 in stead
#        env:
#          SONAR_TOKEN: sqp_be41d4cb66ef65a91427fd51e0e47d21f1b2913b # TODO: Move to secret
#          SONAR_HOST_URL: ${{ vars.SERVER_IP }}:9000
        
  delivery:
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # The user who initiated the workflow
          password: ${{ secrets.GITHUB_TOKEN }} # Automatically assigned by GitHub Actions

      - name: Build and push Docker image
        # docker buildx build --platform linux/amd64/v3 -t ghcr.io/tboulund-devops/dora-meter-api -f src/API/Dockerfile .

        run: | # Notice the platform flag - it's neccessary because we're using buildx and building on a different platform than the target platform that'll run the application
          docker build -t ghcr.io/tboulund-devops/dora-meter-api -f src/API/Dockerfile .
          docker push ghcr.io/tboulund-devops/dora-meter-api
          
  deployment:
    runs-on: ubuntu-latest
    needs: delivery
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Update through WatchTower
        run: | # Notice the $ in front of the variable - it's neccessary because we're in a string
          curl -H "Authorization: Bearer TEMPTOKEN" http://${{ vars.SERVER_IP }}:8888/v1/update
      
      - name: Update databases with Flyway
        run: |
          docker run --rm \
            -v ${{ GITHUB.WORKSPACE }}/db:/flyway/sql \
            -e FLYWAY_URL=jdbc:mariadb://${{ vars.SERVER_IP }}:3306/dora_meter \
            -e FLYWAY_USER=dbadmin \
            -e FLYWAY_PASSWORD=TogetherCenterExceptThusFew \
            flyway/flyway migrate